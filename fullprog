#include <Wire.h>                 // Объявляем нужные библиотеки
#include <NewPing.h> 
#include <LiquidCrystal_I2C.h>

#define TRIG 10                   // Устанавливаем нужный пин для ультразвукового дальномера
#define ECHO 9                    // 
#define MAX_DISTANCE 100          // Устанавливаем максимальное расстояние измерения датчиком

int brightness = 0;    // уставливаем начально значение яркости
int fadeAmount = 1;    // шаг приращения/убывания яркости
int Rled = 11;
int GRled = 12;
int button1 = 4;
int button2 = 5;
bool flag1 = false;
bool flag2 = false;
unsigned long timer1;
unsigned long timer2;
unsigned long Waiting1 = 60000;//величина выдержки
unsigned long Waiting2 = 5000;

NewPing sonar (TRIG,ECHO, MAX_DISTANCE);
LiquidCrystal_I2C lcd(0x27, 16, 2); // Указываем I2C адрес (наиболее распространенное значение), а также параметры экрана (в случае LCD 1602 - 2 строки по 16 символов в каждой

void setup() 
{ 
  pinMode(Rled, OUTPUT);
  pinMode(GRled, OUTPUT);
  pinMode(button1, INPUT);
  pinMode(button2, INPUT);
  lcd.init();                        // Инициализация дисплея
  lcd.backlight();                 // Подключение подсветки
  Serial.begin(9600);
}

void loop()
{
  unsigned int distance1 = sonar.ping_cm(); // Добавляем переменную distance1 которая будем равна получаемому значению с датчика
  bool btnState1 = digitalRead(4);
  bool btnState2 = digitalRead(5);
  if(distance1 < 50 && distance1 != 0 && flag1 == false && flag2 == false)      // условие - если дистанция между объектом и датчиком менее чем 50 см и не равна 0, то включается зеленный светодиод, на дисплее высвечивается приветствие
    { 
      digitalWrite(GRled, HIGH);
      lcd.setCursor(0,0);
      lcd.print("HELLO"); 
      //timer2 = millis() + Waiting2;
    }
  if (btnState1 == true && timer1 == 0 && btnState2 == false) 
  {
    flag1 = true;
    timer1 = millis() + Waiting1;
  }
  if (flag1 == true) 
  {
    lcd.setCursor(0, 0);
    lcd.print("PLEASE HOLD");
    digitalWrite(Rled, HIGH);
    digitalWrite(GRled, LOW);   
  }
  if (timer1 < millis() && timer1 != 0 && flag2 == false)
  {
    lcd.clear();
    changeBright();
    flag1 = false;
  }
  if (btnState2 == true && timer1 > millis() && timer1 != 0)
  {
   flag1 = false;
   flag2 = true;
  }
  if (flag2 == true)
  {
    lcd.clear();
    digitalWrite(Rled, LOW);
    digitalWrite(GRled, LOW);
  }
}
int changeBright()
{
  analogWrite(11, brightness);
  brightness = brightness + fadeAmount;
  if (brightness == 0 || brightness == 255)
 {
  fadeAmount = -fadeAmount ;
 }
}
